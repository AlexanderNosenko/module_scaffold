<%= mc_wrap_with_namespaces(@generator.namespace_dirs) do
<<-EOS
class #{@generator.class_name} < BaseDescriptor

  def type
    '#{@generator.resource_name}'
  end

  def response_attributes
    {
      #{@generator.attributes.map do |attr|
        @generator.format_attr_str(attr)
      end.join(",\n")}
    }
  end

  def request_attributes
    {
      type: :object,
      properties: {
        #{@generator.resource_name}: {
          type: :object,
          properties: {
            #{@generator.attributes.map do |attr|
              @generator.format_attr_str(attr)
            end.join(",\n")}
          }
        }
      },
      required: ['#{@generator.resource_name}']
    }
  end

end
EOS
end %>
