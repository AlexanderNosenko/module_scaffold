<%= mc_wrap_with_namespaces(@helper.namespace_dirs) do
  <<-EOS
class #{@helper.class_name('update')} < BaseService

  def initialize(#{@helper.resource_name}, params)
    @#{@helper.resource_name} = #{@helper.resource_name}
    @params = params
  end

  def call
    update_#{@helper.resource_name}!
    success(#{@helper.resource_name})
  rescue ActiveRecord::RecordInvalid => e
    failure(e.record)
  end

  private

  attr_reader :params, :#{@helper.resource_name}

  def update_#{@helper.resource_name}!
    #{@helper.resource_name}.update!(valid_params)
  end

  def valid_params
    return {} if params[:#{@helper.resource_name}].blank?

    permitted_attributes(::#{@helper.module_full_name}, key: :#{@helper.resource_name})
  end

end
EOS
end %>
