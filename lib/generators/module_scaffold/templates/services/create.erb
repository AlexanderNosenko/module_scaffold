<%= mc_wrap_with_namespaces(@services_helper.namespace_dirs) do
<<-EOS
class #{@services_helper.class_name('create')} < BaseService

  def initialize(params)
    @params = params
  end

  def call
    create_#{@services_helper.resource_name}!
    success(#{@services_helper.resource_name})
  rescue ActiveRecord::RecordInvalid => e
    failure(e.record)
  end

  private

  attr_reader :params, :#{@services_helper.resource_name}

  def create_#{@services_helper.resource_name}!
    @#{@services_helper.resource_name} = #{@services_helper.module_name}.create!(valid_params)
  end

  def valid_params
    return {} if params[:#{@services_helper.resource_name}].blank?

    permitted_attributes(::#{@services_helper.module_full_name}, key: :#{@services_helper.resource_name})
  end

end
EOS
end %>
